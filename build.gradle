plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


group = 'net.internalerror'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'futuristicfactories'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: '2022.08.14-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'futuristicfactories'

            mods {
                futuristicfactories {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            property 'forge.enabledGameTestNamespaces', 'futuristicfactories'

            mods {
                futuristicfactories {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'warn'
            property 'forge.enabledGameTestNamespaces', 'futuristicfactories'

            mods {
                futuristicfactories {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'futuristicfactories', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                futuristicfactories {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
}

//https://dvs1.progwml6.com/files/maven/mezz/jei/jei-1.19.2/11.2.0.297/jei-1.19.2-11.2.0.297.pom
//https://dvs1.progwml6.com/files/maven/mezz/jei/jei-1.19.2-forge/

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.3'

    if (project.hasProperty('jei_version')) {
        compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
        compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
        runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "futuristicfactories",
                "Specification-Vendor"    : "InternalError_",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "InternalError_",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
